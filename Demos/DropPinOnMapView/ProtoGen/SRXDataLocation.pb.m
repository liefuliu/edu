// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SRXDataLocation.pb.h"
// @@protoc_insertion_point(imports)

@implementation SrxdataLocationRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SrxdataLocationRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

BOOL SRXDataCityEnumIsValidValue(SRXDataCityEnum value) {
  switch (value) {
    case SRXDataCityEnumBeijing:
    case SRXDataCityEnumGuangzhou:
    case SRXDataCityEnumShanghai:
    case SRXDataCityEnumTianjin:
    case SRXDataCityEnumChongqin:
    case SRXDataCityEnumChangsha:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromSRXDataCityEnum(SRXDataCityEnum value) {
  switch (value) {
    case SRXDataCityEnumBeijing:
      return @"SRXDataCityEnumBeijing";
    case SRXDataCityEnumGuangzhou:
      return @"SRXDataCityEnumGuangzhou";
    case SRXDataCityEnumShanghai:
      return @"SRXDataCityEnumShanghai";
    case SRXDataCityEnumTianjin:
      return @"SRXDataCityEnumTianjin";
    case SRXDataCityEnumChongqin:
      return @"SRXDataCityEnumChongqin";
    case SRXDataCityEnumChangsha:
      return @"SRXDataCityEnumChangsha";
    default:
      return nil;
  }
}

@interface SRXDataLocation ()
@property SRXDataCityEnum city;
@property (strong) NSString* streetName;
@property Float32 latitude;
@property Float32 longtitude;
@end

@implementation SRXDataLocation

- (BOOL) hasCity {
  return !!hasCity_;
}
- (void) setHasCity:(BOOL) _value_ {
  hasCity_ = !!_value_;
}
@synthesize city;
- (BOOL) hasStreetName {
  return !!hasStreetName_;
}
- (void) setHasStreetName:(BOOL) _value_ {
  hasStreetName_ = !!_value_;
}
@synthesize streetName;
- (BOOL) hasLatitude {
  return !!hasLatitude_;
}
- (void) setHasLatitude:(BOOL) _value_ {
  hasLatitude_ = !!_value_;
}
@synthesize latitude;
- (BOOL) hasLongtitude {
  return !!hasLongtitude_;
}
- (void) setHasLongtitude:(BOOL) _value_ {
  hasLongtitude_ = !!_value_;
}
@synthesize longtitude;
- (instancetype) init {
  if ((self = [super init])) {
    self.city = SRXDataCityEnumBeijing;
    self.streetName = @"";
    self.latitude = 0;
    self.longtitude = 0;
  }
  return self;
}
static SRXDataLocation* defaultSRXDataLocationInstance = nil;
+ (void) initialize {
  if (self == [SRXDataLocation class]) {
    defaultSRXDataLocationInstance = [[SRXDataLocation alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataLocationInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataLocationInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasCity) {
    [output writeEnum:1 value:self.city];
  }
  if (self.hasStreetName) {
    [output writeString:2 value:self.streetName];
  }
  if (self.hasLatitude) {
    [output writeFloat:3 value:self.latitude];
  }
  if (self.hasLongtitude) {
    [output writeFloat:4 value:self.longtitude];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasCity) {
    size_ += computeEnumSize(1, self.city);
  }
  if (self.hasStreetName) {
    size_ += computeStringSize(2, self.streetName);
  }
  if (self.hasLatitude) {
    size_ += computeFloatSize(3, self.latitude);
  }
  if (self.hasLongtitude) {
    size_ += computeFloatSize(4, self.longtitude);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataLocation*) parseFromData:(NSData*) data {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromData:data] build];
}
+ (SRXDataLocation*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataLocation*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromInputStream:input] build];
}
+ (SRXDataLocation*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataLocation*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataLocation*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataLocation*)[[[SRXDataLocation builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataLocationBuilder*) builder {
  return [[SRXDataLocationBuilder alloc] init];
}
+ (SRXDataLocationBuilder*) builderWithPrototype:(SRXDataLocation*) prototype {
  return [[SRXDataLocation builder] mergeFrom:prototype];
}
- (SRXDataLocationBuilder*) builder {
  return [SRXDataLocation builder];
}
- (SRXDataLocationBuilder*) toBuilder {
  return [SRXDataLocation builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasCity) {
    [output appendFormat:@"%@%@: %@\n", indent, @"city", NSStringFromSRXDataCityEnum(self.city)];
  }
  if (self.hasStreetName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"streetName", self.streetName];
  }
  if (self.hasLatitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"latitude", [NSNumber numberWithFloat:self.latitude]];
  }
  if (self.hasLongtitude) {
    [output appendFormat:@"%@%@: %@\n", indent, @"longtitude", [NSNumber numberWithFloat:self.longtitude]];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasCity) {
    [dictionary setObject: @(self.city) forKey: @"city"];
  }
  if (self.hasStreetName) {
    [dictionary setObject: self.streetName forKey: @"streetName"];
  }
  if (self.hasLatitude) {
    [dictionary setObject: [NSNumber numberWithFloat:self.latitude] forKey: @"latitude"];
  }
  if (self.hasLongtitude) {
    [dictionary setObject: [NSNumber numberWithFloat:self.longtitude] forKey: @"longtitude"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataLocation class]]) {
    return NO;
  }
  SRXDataLocation *otherMessage = other;
  return
      self.hasCity == otherMessage.hasCity &&
      (!self.hasCity || self.city == otherMessage.city) &&
      self.hasStreetName == otherMessage.hasStreetName &&
      (!self.hasStreetName || [self.streetName isEqual:otherMessage.streetName]) &&
      self.hasLatitude == otherMessage.hasLatitude &&
      (!self.hasLatitude || self.latitude == otherMessage.latitude) &&
      self.hasLongtitude == otherMessage.hasLongtitude &&
      (!self.hasLongtitude || self.longtitude == otherMessage.longtitude) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasCity) {
    hashCode = hashCode * 31 + self.city;
  }
  if (self.hasStreetName) {
    hashCode = hashCode * 31 + [self.streetName hash];
  }
  if (self.hasLatitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.latitude] hash];
  }
  if (self.hasLongtitude) {
    hashCode = hashCode * 31 + [[NSNumber numberWithFloat:self.longtitude] hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SRXDataLocationBuilder()
@property (strong) SRXDataLocation* resultSrxdataLocation;
@end

@implementation SRXDataLocationBuilder
@synthesize resultSrxdataLocation;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataLocation = [[SRXDataLocation alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataLocation;
}
- (SRXDataLocationBuilder*) clear {
  self.resultSrxdataLocation = [[SRXDataLocation alloc] init];
  return self;
}
- (SRXDataLocationBuilder*) clone {
  return [SRXDataLocation builderWithPrototype:resultSrxdataLocation];
}
- (SRXDataLocation*) defaultInstance {
  return [SRXDataLocation defaultInstance];
}
- (SRXDataLocation*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataLocation*) buildPartial {
  SRXDataLocation* returnMe = resultSrxdataLocation;
  self.resultSrxdataLocation = nil;
  return returnMe;
}
- (SRXDataLocationBuilder*) mergeFrom:(SRXDataLocation*) other {
  if (other == [SRXDataLocation defaultInstance]) {
    return self;
  }
  if (other.hasCity) {
    [self setCity:other.city];
  }
  if (other.hasStreetName) {
    [self setStreetName:other.streetName];
  }
  if (other.hasLatitude) {
    [self setLatitude:other.latitude];
  }
  if (other.hasLongtitude) {
    [self setLongtitude:other.longtitude];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataLocationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataLocationBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        SRXDataCityEnum value = (SRXDataCityEnum)[input readEnum];
        if (SRXDataCityEnumIsValidValue(value)) {
          [self setCity:value];
        } else {
          [unknownFields mergeVarintField:1 value:value];
        }
        break;
      }
      case 18: {
        [self setStreetName:[input readString]];
        break;
      }
      case 29: {
        [self setLatitude:[input readFloat]];
        break;
      }
      case 37: {
        [self setLongtitude:[input readFloat]];
        break;
      }
    }
  }
}
- (BOOL) hasCity {
  return resultSrxdataLocation.hasCity;
}
- (SRXDataCityEnum) city {
  return resultSrxdataLocation.city;
}
- (SRXDataLocationBuilder*) setCity:(SRXDataCityEnum) value {
  resultSrxdataLocation.hasCity = YES;
  resultSrxdataLocation.city = value;
  return self;
}
- (SRXDataLocationBuilder*) clearCity {
  resultSrxdataLocation.hasCity = NO;
  resultSrxdataLocation.city = SRXDataCityEnumBeijing;
  return self;
}
- (BOOL) hasStreetName {
  return resultSrxdataLocation.hasStreetName;
}
- (NSString*) streetName {
  return resultSrxdataLocation.streetName;
}
- (SRXDataLocationBuilder*) setStreetName:(NSString*) value {
  resultSrxdataLocation.hasStreetName = YES;
  resultSrxdataLocation.streetName = value;
  return self;
}
- (SRXDataLocationBuilder*) clearStreetName {
  resultSrxdataLocation.hasStreetName = NO;
  resultSrxdataLocation.streetName = @"";
  return self;
}
- (BOOL) hasLatitude {
  return resultSrxdataLocation.hasLatitude;
}
- (Float32) latitude {
  return resultSrxdataLocation.latitude;
}
- (SRXDataLocationBuilder*) setLatitude:(Float32) value {
  resultSrxdataLocation.hasLatitude = YES;
  resultSrxdataLocation.latitude = value;
  return self;
}
- (SRXDataLocationBuilder*) clearLatitude {
  resultSrxdataLocation.hasLatitude = NO;
  resultSrxdataLocation.latitude = 0;
  return self;
}
- (BOOL) hasLongtitude {
  return resultSrxdataLocation.hasLongtitude;
}
- (Float32) longtitude {
  return resultSrxdataLocation.longtitude;
}
- (SRXDataLocationBuilder*) setLongtitude:(Float32) value {
  resultSrxdataLocation.hasLongtitude = YES;
  resultSrxdataLocation.longtitude = value;
  return self;
}
- (SRXDataLocationBuilder*) clearLongtitude {
  resultSrxdataLocation.hasLongtitude = NO;
  resultSrxdataLocation.longtitude = 0;
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
