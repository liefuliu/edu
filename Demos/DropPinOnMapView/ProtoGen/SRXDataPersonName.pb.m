// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SRXDataPersonName.pb.h"
// @@protoc_insertion_point(imports)

@implementation SrxdataPersonNameRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SrxdataPersonNameRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SRXDataPersonName ()
@property (strong) NSString* familyName;
@property (strong) NSString* givenName;
@end

@implementation SRXDataPersonName

- (BOOL) hasFamilyName {
  return !!hasFamilyName_;
}
- (void) setHasFamilyName:(BOOL) _value_ {
  hasFamilyName_ = !!_value_;
}
@synthesize familyName;
- (BOOL) hasGivenName {
  return !!hasGivenName_;
}
- (void) setHasGivenName:(BOOL) _value_ {
  hasGivenName_ = !!_value_;
}
@synthesize givenName;
- (instancetype) init {
  if ((self = [super init])) {
    self.familyName = @"";
    self.givenName = @"";
  }
  return self;
}
static SRXDataPersonName* defaultSRXDataPersonNameInstance = nil;
+ (void) initialize {
  if (self == [SRXDataPersonName class]) {
    defaultSRXDataPersonNameInstance = [[SRXDataPersonName alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataPersonNameInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataPersonNameInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasFamilyName) {
    [output writeString:1 value:self.familyName];
  }
  if (self.hasGivenName) {
    [output writeString:2 value:self.givenName];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasFamilyName) {
    size_ += computeStringSize(1, self.familyName);
  }
  if (self.hasGivenName) {
    size_ += computeStringSize(2, self.givenName);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataPersonName*) parseFromData:(NSData*) data {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromData:data] build];
}
+ (SRXDataPersonName*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataPersonName*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromInputStream:input] build];
}
+ (SRXDataPersonName*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataPersonName*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataPersonName*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataPersonName*)[[[SRXDataPersonName builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataPersonNameBuilder*) builder {
  return [[SRXDataPersonNameBuilder alloc] init];
}
+ (SRXDataPersonNameBuilder*) builderWithPrototype:(SRXDataPersonName*) prototype {
  return [[SRXDataPersonName builder] mergeFrom:prototype];
}
- (SRXDataPersonNameBuilder*) builder {
  return [SRXDataPersonName builder];
}
- (SRXDataPersonNameBuilder*) toBuilder {
  return [SRXDataPersonName builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasFamilyName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"familyName", self.familyName];
  }
  if (self.hasGivenName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"givenName", self.givenName];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasFamilyName) {
    [dictionary setObject: self.familyName forKey: @"familyName"];
  }
  if (self.hasGivenName) {
    [dictionary setObject: self.givenName forKey: @"givenName"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataPersonName class]]) {
    return NO;
  }
  SRXDataPersonName *otherMessage = other;
  return
      self.hasFamilyName == otherMessage.hasFamilyName &&
      (!self.hasFamilyName || [self.familyName isEqual:otherMessage.familyName]) &&
      self.hasGivenName == otherMessage.hasGivenName &&
      (!self.hasGivenName || [self.givenName isEqual:otherMessage.givenName]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasFamilyName) {
    hashCode = hashCode * 31 + [self.familyName hash];
  }
  if (self.hasGivenName) {
    hashCode = hashCode * 31 + [self.givenName hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SRXDataPersonNameBuilder()
@property (strong) SRXDataPersonName* resultSrxdataPersonName;
@end

@implementation SRXDataPersonNameBuilder
@synthesize resultSrxdataPersonName;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataPersonName = [[SRXDataPersonName alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataPersonName;
}
- (SRXDataPersonNameBuilder*) clear {
  self.resultSrxdataPersonName = [[SRXDataPersonName alloc] init];
  return self;
}
- (SRXDataPersonNameBuilder*) clone {
  return [SRXDataPersonName builderWithPrototype:resultSrxdataPersonName];
}
- (SRXDataPersonName*) defaultInstance {
  return [SRXDataPersonName defaultInstance];
}
- (SRXDataPersonName*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataPersonName*) buildPartial {
  SRXDataPersonName* returnMe = resultSrxdataPersonName;
  self.resultSrxdataPersonName = nil;
  return returnMe;
}
- (SRXDataPersonNameBuilder*) mergeFrom:(SRXDataPersonName*) other {
  if (other == [SRXDataPersonName defaultInstance]) {
    return self;
  }
  if (other.hasFamilyName) {
    [self setFamilyName:other.familyName];
  }
  if (other.hasGivenName) {
    [self setGivenName:other.givenName];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataPersonNameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataPersonNameBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setFamilyName:[input readString]];
        break;
      }
      case 18: {
        [self setGivenName:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasFamilyName {
  return resultSrxdataPersonName.hasFamilyName;
}
- (NSString*) familyName {
  return resultSrxdataPersonName.familyName;
}
- (SRXDataPersonNameBuilder*) setFamilyName:(NSString*) value {
  resultSrxdataPersonName.hasFamilyName = YES;
  resultSrxdataPersonName.familyName = value;
  return self;
}
- (SRXDataPersonNameBuilder*) clearFamilyName {
  resultSrxdataPersonName.hasFamilyName = NO;
  resultSrxdataPersonName.familyName = @"";
  return self;
}
- (BOOL) hasGivenName {
  return resultSrxdataPersonName.hasGivenName;
}
- (NSString*) givenName {
  return resultSrxdataPersonName.givenName;
}
- (SRXDataPersonNameBuilder*) setGivenName:(NSString*) value {
  resultSrxdataPersonName.hasGivenName = YES;
  resultSrxdataPersonName.givenName = value;
  return self;
}
- (SRXDataPersonNameBuilder*) clearGivenName {
  resultSrxdataPersonName.hasGivenName = NO;
  resultSrxdataPersonName.givenName = @"";
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
