// Generated by the protocol buffer compiler.  DO NOT EDIT!

#import "SRXDataClass.pb.h"
// @@protoc_insertion_point(imports)

@implementation SrxdataClassRoot
static PBExtensionRegistry* extensionRegistry = nil;
+ (PBExtensionRegistry*) extensionRegistry {
  return extensionRegistry;
}

+ (void) initialize {
  if (self == [SrxdataClassRoot class]) {
    PBMutableExtensionRegistry* registry = [PBMutableExtensionRegistry registry];
    [self registerAllExtensions:registry];
    [SrxdataLocationRoot registerAllExtensions:registry];
    extensionRegistry = registry;
  }
}
+ (void) registerAllExtensions:(PBMutableExtensionRegistry*) registry {
}
@end

@interface SRXDataClassTypeEnum ()
@end

@implementation SRXDataClassTypeEnum

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static SRXDataClassTypeEnum* defaultSRXDataClassTypeEnumInstance = nil;
+ (void) initialize {
  if (self == [SRXDataClassTypeEnum class]) {
    defaultSRXDataClassTypeEnumInstance = [[SRXDataClassTypeEnum alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataClassTypeEnumInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataClassTypeEnumInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataClassTypeEnum*) parseFromData:(NSData*) data {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromData:data] build];
}
+ (SRXDataClassTypeEnum*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTypeEnum*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromInputStream:input] build];
}
+ (SRXDataClassTypeEnum*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTypeEnum*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataClassTypeEnum*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTypeEnum*)[[[SRXDataClassTypeEnum builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTypeEnumBuilder*) builder {
  return [[SRXDataClassTypeEnumBuilder alloc] init];
}
+ (SRXDataClassTypeEnumBuilder*) builderWithPrototype:(SRXDataClassTypeEnum*) prototype {
  return [[SRXDataClassTypeEnum builder] mergeFrom:prototype];
}
- (SRXDataClassTypeEnumBuilder*) builder {
  return [SRXDataClassTypeEnum builder];
}
- (SRXDataClassTypeEnumBuilder*) toBuilder {
  return [SRXDataClassTypeEnum builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataClassTypeEnum class]]) {
    return NO;
  }
  SRXDataClassTypeEnum *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

BOOL SRXDataClassTypeEnumSRXDataClassTypeIsValidValue(SRXDataClassTypeEnumSRXDataClassType value) {
  switch (value) {
    case SRXDataClassTypeEnumSRXDataClassTypeUnknown:
    case SRXDataClassTypeEnumSRXDataClassTypeYuwen:
    case SRXDataClassTypeEnumSRXDataClassTypeShuxue:
    case SRXDataClassTypeEnumSRXDataClassTypeYingyu:
    case SRXDataClassTypeEnumSRXDataClassTypeHechang:
    case SRXDataClassTypeEnumSRXDataClassTypeWudao:
    case SRXDataClassTypeEnumSRXDataClassTypeGangqin:
    case SRXDataClassTypeEnumSRXDataClassTypeWeiqi:
    case SRXDataClassTypeEnumSRXDataClassTypeZhongguoxiangqi:
    case SRXDataClassTypeEnumSRXDataClassTypeGuojixiangqi:
    case SRXDataClassTypeEnumSRXDataClassTypeShufa:
    case SRXDataClassTypeEnumSRXDataClassTypeHuihua:
    case SRXDataClassTypeEnumSRXDataClassTypeWushu:
      return YES;
    default:
      return NO;
  }
}
NSString *NSStringFromSRXDataClassTypeEnumSRXDataClassType(SRXDataClassTypeEnumSRXDataClassType value) {
  switch (value) {
    case SRXDataClassTypeEnumSRXDataClassTypeUnknown:
      return @"SRXDataClassTypeEnumSRXDataClassTypeUnknown";
    case SRXDataClassTypeEnumSRXDataClassTypeYuwen:
      return @"SRXDataClassTypeEnumSRXDataClassTypeYuwen";
    case SRXDataClassTypeEnumSRXDataClassTypeShuxue:
      return @"SRXDataClassTypeEnumSRXDataClassTypeShuxue";
    case SRXDataClassTypeEnumSRXDataClassTypeYingyu:
      return @"SRXDataClassTypeEnumSRXDataClassTypeYingyu";
    case SRXDataClassTypeEnumSRXDataClassTypeHechang:
      return @"SRXDataClassTypeEnumSRXDataClassTypeHechang";
    case SRXDataClassTypeEnumSRXDataClassTypeWudao:
      return @"SRXDataClassTypeEnumSRXDataClassTypeWudao";
    case SRXDataClassTypeEnumSRXDataClassTypeGangqin:
      return @"SRXDataClassTypeEnumSRXDataClassTypeGangqin";
    case SRXDataClassTypeEnumSRXDataClassTypeWeiqi:
      return @"SRXDataClassTypeEnumSRXDataClassTypeWeiqi";
    case SRXDataClassTypeEnumSRXDataClassTypeZhongguoxiangqi:
      return @"SRXDataClassTypeEnumSRXDataClassTypeZhongguoxiangqi";
    case SRXDataClassTypeEnumSRXDataClassTypeGuojixiangqi:
      return @"SRXDataClassTypeEnumSRXDataClassTypeGuojixiangqi";
    case SRXDataClassTypeEnumSRXDataClassTypeShufa:
      return @"SRXDataClassTypeEnumSRXDataClassTypeShufa";
    case SRXDataClassTypeEnumSRXDataClassTypeHuihua:
      return @"SRXDataClassTypeEnumSRXDataClassTypeHuihua";
    case SRXDataClassTypeEnumSRXDataClassTypeWushu:
      return @"SRXDataClassTypeEnumSRXDataClassTypeWushu";
    default:
      return nil;
  }
}

@interface SRXDataClassTypeEnumBuilder()
@property (strong) SRXDataClassTypeEnum* resultSrxdataClassTypeEnum;
@end

@implementation SRXDataClassTypeEnumBuilder
@synthesize resultSrxdataClassTypeEnum;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataClassTypeEnum = [[SRXDataClassTypeEnum alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataClassTypeEnum;
}
- (SRXDataClassTypeEnumBuilder*) clear {
  self.resultSrxdataClassTypeEnum = [[SRXDataClassTypeEnum alloc] init];
  return self;
}
- (SRXDataClassTypeEnumBuilder*) clone {
  return [SRXDataClassTypeEnum builderWithPrototype:resultSrxdataClassTypeEnum];
}
- (SRXDataClassTypeEnum*) defaultInstance {
  return [SRXDataClassTypeEnum defaultInstance];
}
- (SRXDataClassTypeEnum*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataClassTypeEnum*) buildPartial {
  SRXDataClassTypeEnum* returnMe = resultSrxdataClassTypeEnum;
  self.resultSrxdataClassTypeEnum = nil;
  return returnMe;
}
- (SRXDataClassTypeEnumBuilder*) mergeFrom:(SRXDataClassTypeEnum*) other {
  if (other == [SRXDataClassTypeEnum defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataClassTypeEnumBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataClassTypeEnumBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface SRXDataClassTime ()
@end

@implementation SRXDataClassTime

- (instancetype) init {
  if ((self = [super init])) {
  }
  return self;
}
static SRXDataClassTime* defaultSRXDataClassTimeInstance = nil;
+ (void) initialize {
  if (self == [SRXDataClassTime class]) {
    defaultSRXDataClassTimeInstance = [[SRXDataClassTime alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataClassTimeInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataClassTimeInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataClassTime*) parseFromData:(NSData*) data {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromData:data] build];
}
+ (SRXDataClassTime*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTime*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromInputStream:input] build];
}
+ (SRXDataClassTime*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTime*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataClassTime*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassTime*)[[[SRXDataClassTime builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassTimeBuilder*) builder {
  return [[SRXDataClassTimeBuilder alloc] init];
}
+ (SRXDataClassTimeBuilder*) builderWithPrototype:(SRXDataClassTime*) prototype {
  return [[SRXDataClassTime builder] mergeFrom:prototype];
}
- (SRXDataClassTimeBuilder*) builder {
  return [SRXDataClassTime builder];
}
- (SRXDataClassTimeBuilder*) toBuilder {
  return [SRXDataClassTime builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataClassTime class]]) {
    return NO;
  }
  SRXDataClassTime *otherMessage = other;
  return
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SRXDataClassTimeBuilder()
@property (strong) SRXDataClassTime* resultSrxdataClassTime;
@end

@implementation SRXDataClassTimeBuilder
@synthesize resultSrxdataClassTime;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataClassTime = [[SRXDataClassTime alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataClassTime;
}
- (SRXDataClassTimeBuilder*) clear {
  self.resultSrxdataClassTime = [[SRXDataClassTime alloc] init];
  return self;
}
- (SRXDataClassTimeBuilder*) clone {
  return [SRXDataClassTime builderWithPrototype:resultSrxdataClassTime];
}
- (SRXDataClassTime*) defaultInstance {
  return [SRXDataClassTime defaultInstance];
}
- (SRXDataClassTime*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataClassTime*) buildPartial {
  SRXDataClassTime* returnMe = resultSrxdataClassTime;
  self.resultSrxdataClassTime = nil;
  return returnMe;
}
- (SRXDataClassTimeBuilder*) mergeFrom:(SRXDataClassTime*) other {
  if (other == [SRXDataClassTime defaultInstance]) {
    return self;
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataClassTimeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataClassTimeBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
    }
  }
}
@end

@interface SRXDataClassInfo ()
@property (strong) NSString* teacherName;
@property SRXDataClassTypeEnumSRXDataClassType classType;
@property (strong) SRXDataLocation* location;
@property (strong) SRXDataClassTime* classTime;
@property SInt32 numberOfClasses;
@property SInt32 tuitionFeeInYuan;
@property (strong) NSString* summary;
@end

@implementation SRXDataClassInfo

- (BOOL) hasTeacherName {
  return !!hasTeacherName_;
}
- (void) setHasTeacherName:(BOOL) _value_ {
  hasTeacherName_ = !!_value_;
}
@synthesize teacherName;
- (BOOL) hasClassType {
  return !!hasClassType_;
}
- (void) setHasClassType:(BOOL) _value_ {
  hasClassType_ = !!_value_;
}
@synthesize classType;
- (BOOL) hasLocation {
  return !!hasLocation_;
}
- (void) setHasLocation:(BOOL) _value_ {
  hasLocation_ = !!_value_;
}
@synthesize location;
- (BOOL) hasClassTime {
  return !!hasClassTime_;
}
- (void) setHasClassTime:(BOOL) _value_ {
  hasClassTime_ = !!_value_;
}
@synthesize classTime;
- (BOOL) hasNumberOfClasses {
  return !!hasNumberOfClasses_;
}
- (void) setHasNumberOfClasses:(BOOL) _value_ {
  hasNumberOfClasses_ = !!_value_;
}
@synthesize numberOfClasses;
- (BOOL) hasTuitionFeeInYuan {
  return !!hasTuitionFeeInYuan_;
}
- (void) setHasTuitionFeeInYuan:(BOOL) _value_ {
  hasTuitionFeeInYuan_ = !!_value_;
}
@synthesize tuitionFeeInYuan;
- (BOOL) hasSummary {
  return !!hasSummary_;
}
- (void) setHasSummary:(BOOL) _value_ {
  hasSummary_ = !!_value_;
}
@synthesize summary;
- (instancetype) init {
  if ((self = [super init])) {
    self.teacherName = @"";
    self.classType = SRXDataClassTypeEnumSRXDataClassTypeUnknown;
    self.location = [SRXDataLocation defaultInstance];
    self.classTime = [SRXDataClassTime defaultInstance];
    self.numberOfClasses = 0;
    self.tuitionFeeInYuan = 0;
    self.summary = @"";
  }
  return self;
}
static SRXDataClassInfo* defaultSRXDataClassInfoInstance = nil;
+ (void) initialize {
  if (self == [SRXDataClassInfo class]) {
    defaultSRXDataClassInfoInstance = [[SRXDataClassInfo alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataClassInfoInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataClassInfoInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasTeacherName) {
    [output writeString:1 value:self.teacherName];
  }
  if (self.hasClassType) {
    [output writeEnum:2 value:self.classType];
  }
  if (self.hasLocation) {
    [output writeMessage:3 value:self.location];
  }
  if (self.hasClassTime) {
    [output writeMessage:4 value:self.classTime];
  }
  if (self.hasNumberOfClasses) {
    [output writeInt32:5 value:self.numberOfClasses];
  }
  if (self.hasTuitionFeeInYuan) {
    [output writeInt32:6 value:self.tuitionFeeInYuan];
  }
  if (self.hasSummary) {
    [output writeString:7 value:self.summary];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasTeacherName) {
    size_ += computeStringSize(1, self.teacherName);
  }
  if (self.hasClassType) {
    size_ += computeEnumSize(2, self.classType);
  }
  if (self.hasLocation) {
    size_ += computeMessageSize(3, self.location);
  }
  if (self.hasClassTime) {
    size_ += computeMessageSize(4, self.classTime);
  }
  if (self.hasNumberOfClasses) {
    size_ += computeInt32Size(5, self.numberOfClasses);
  }
  if (self.hasTuitionFeeInYuan) {
    size_ += computeInt32Size(6, self.tuitionFeeInYuan);
  }
  if (self.hasSummary) {
    size_ += computeStringSize(7, self.summary);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataClassInfo*) parseFromData:(NSData*) data {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromData:data] build];
}
+ (SRXDataClassInfo*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassInfo*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromInputStream:input] build];
}
+ (SRXDataClassInfo*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataClassInfo*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClassInfo*)[[[SRXDataClassInfo builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassInfoBuilder*) builder {
  return [[SRXDataClassInfoBuilder alloc] init];
}
+ (SRXDataClassInfoBuilder*) builderWithPrototype:(SRXDataClassInfo*) prototype {
  return [[SRXDataClassInfo builder] mergeFrom:prototype];
}
- (SRXDataClassInfoBuilder*) builder {
  return [SRXDataClassInfo builder];
}
- (SRXDataClassInfoBuilder*) toBuilder {
  return [SRXDataClassInfo builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasTeacherName) {
    [output appendFormat:@"%@%@: %@\n", indent, @"teacherName", self.teacherName];
  }
  if (self.hasClassType) {
    [output appendFormat:@"%@%@: %@\n", indent, @"classType", NSStringFromSRXDataClassTypeEnumSRXDataClassType(self.classType)];
  }
  if (self.hasLocation) {
    [output appendFormat:@"%@%@ {\n", indent, @"location"];
    [self.location writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasClassTime) {
    [output appendFormat:@"%@%@ {\n", indent, @"classTime"];
    [self.classTime writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  if (self.hasNumberOfClasses) {
    [output appendFormat:@"%@%@: %@\n", indent, @"numberOfClasses", [NSNumber numberWithInteger:self.numberOfClasses]];
  }
  if (self.hasTuitionFeeInYuan) {
    [output appendFormat:@"%@%@: %@\n", indent, @"tuitionFeeInYuan", [NSNumber numberWithInteger:self.tuitionFeeInYuan]];
  }
  if (self.hasSummary) {
    [output appendFormat:@"%@%@: %@\n", indent, @"summary", self.summary];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasTeacherName) {
    [dictionary setObject: self.teacherName forKey: @"teacherName"];
  }
  if (self.hasClassType) {
    [dictionary setObject: @(self.classType) forKey: @"classType"];
  }
  if (self.hasLocation) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.location storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"location"];
  }
  if (self.hasClassTime) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.classTime storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"classTime"];
  }
  if (self.hasNumberOfClasses) {
    [dictionary setObject: [NSNumber numberWithInteger:self.numberOfClasses] forKey: @"numberOfClasses"];
  }
  if (self.hasTuitionFeeInYuan) {
    [dictionary setObject: [NSNumber numberWithInteger:self.tuitionFeeInYuan] forKey: @"tuitionFeeInYuan"];
  }
  if (self.hasSummary) {
    [dictionary setObject: self.summary forKey: @"summary"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataClassInfo class]]) {
    return NO;
  }
  SRXDataClassInfo *otherMessage = other;
  return
      self.hasTeacherName == otherMessage.hasTeacherName &&
      (!self.hasTeacherName || [self.teacherName isEqual:otherMessage.teacherName]) &&
      self.hasClassType == otherMessage.hasClassType &&
      (!self.hasClassType || self.classType == otherMessage.classType) &&
      self.hasLocation == otherMessage.hasLocation &&
      (!self.hasLocation || [self.location isEqual:otherMessage.location]) &&
      self.hasClassTime == otherMessage.hasClassTime &&
      (!self.hasClassTime || [self.classTime isEqual:otherMessage.classTime]) &&
      self.hasNumberOfClasses == otherMessage.hasNumberOfClasses &&
      (!self.hasNumberOfClasses || self.numberOfClasses == otherMessage.numberOfClasses) &&
      self.hasTuitionFeeInYuan == otherMessage.hasTuitionFeeInYuan &&
      (!self.hasTuitionFeeInYuan || self.tuitionFeeInYuan == otherMessage.tuitionFeeInYuan) &&
      self.hasSummary == otherMessage.hasSummary &&
      (!self.hasSummary || [self.summary isEqual:otherMessage.summary]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasTeacherName) {
    hashCode = hashCode * 31 + [self.teacherName hash];
  }
  if (self.hasClassType) {
    hashCode = hashCode * 31 + self.classType;
  }
  if (self.hasLocation) {
    hashCode = hashCode * 31 + [self.location hash];
  }
  if (self.hasClassTime) {
    hashCode = hashCode * 31 + [self.classTime hash];
  }
  if (self.hasNumberOfClasses) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.numberOfClasses] hash];
  }
  if (self.hasTuitionFeeInYuan) {
    hashCode = hashCode * 31 + [[NSNumber numberWithInteger:self.tuitionFeeInYuan] hash];
  }
  if (self.hasSummary) {
    hashCode = hashCode * 31 + [self.summary hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SRXDataClassInfoBuilder()
@property (strong) SRXDataClassInfo* resultSrxdataClassInfo;
@end

@implementation SRXDataClassInfoBuilder
@synthesize resultSrxdataClassInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataClassInfo = [[SRXDataClassInfo alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataClassInfo;
}
- (SRXDataClassInfoBuilder*) clear {
  self.resultSrxdataClassInfo = [[SRXDataClassInfo alloc] init];
  return self;
}
- (SRXDataClassInfoBuilder*) clone {
  return [SRXDataClassInfo builderWithPrototype:resultSrxdataClassInfo];
}
- (SRXDataClassInfo*) defaultInstance {
  return [SRXDataClassInfo defaultInstance];
}
- (SRXDataClassInfo*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataClassInfo*) buildPartial {
  SRXDataClassInfo* returnMe = resultSrxdataClassInfo;
  self.resultSrxdataClassInfo = nil;
  return returnMe;
}
- (SRXDataClassInfoBuilder*) mergeFrom:(SRXDataClassInfo*) other {
  if (other == [SRXDataClassInfo defaultInstance]) {
    return self;
  }
  if (other.hasTeacherName) {
    [self setTeacherName:other.teacherName];
  }
  if (other.hasClassType) {
    [self setClassType:other.classType];
  }
  if (other.hasLocation) {
    [self mergeLocation:other.location];
  }
  if (other.hasClassTime) {
    [self mergeClassTime:other.classTime];
  }
  if (other.hasNumberOfClasses) {
    [self setNumberOfClasses:other.numberOfClasses];
  }
  if (other.hasTuitionFeeInYuan) {
    [self setTuitionFeeInYuan:other.tuitionFeeInYuan];
  }
  if (other.hasSummary) {
    [self setSummary:other.summary];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataClassInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataClassInfoBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 10: {
        [self setTeacherName:[input readString]];
        break;
      }
      case 16: {
        SRXDataClassTypeEnumSRXDataClassType value = (SRXDataClassTypeEnumSRXDataClassType)[input readEnum];
        if (SRXDataClassTypeEnumSRXDataClassTypeIsValidValue(value)) {
          [self setClassType:value];
        } else {
          [unknownFields mergeVarintField:2 value:value];
        }
        break;
      }
      case 26: {
        SRXDataLocationBuilder* subBuilder = [SRXDataLocation builder];
        if (self.hasLocation) {
          [subBuilder mergeFrom:self.location];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setLocation:[subBuilder buildPartial]];
        break;
      }
      case 34: {
        SRXDataClassTimeBuilder* subBuilder = [SRXDataClassTime builder];
        if (self.hasClassTime) {
          [subBuilder mergeFrom:self.classTime];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClassTime:[subBuilder buildPartial]];
        break;
      }
      case 40: {
        [self setNumberOfClasses:[input readInt32]];
        break;
      }
      case 48: {
        [self setTuitionFeeInYuan:[input readInt32]];
        break;
      }
      case 58: {
        [self setSummary:[input readString]];
        break;
      }
    }
  }
}
- (BOOL) hasTeacherName {
  return resultSrxdataClassInfo.hasTeacherName;
}
- (NSString*) teacherName {
  return resultSrxdataClassInfo.teacherName;
}
- (SRXDataClassInfoBuilder*) setTeacherName:(NSString*) value {
  resultSrxdataClassInfo.hasTeacherName = YES;
  resultSrxdataClassInfo.teacherName = value;
  return self;
}
- (SRXDataClassInfoBuilder*) clearTeacherName {
  resultSrxdataClassInfo.hasTeacherName = NO;
  resultSrxdataClassInfo.teacherName = @"";
  return self;
}
- (BOOL) hasClassType {
  return resultSrxdataClassInfo.hasClassType;
}
- (SRXDataClassTypeEnumSRXDataClassType) classType {
  return resultSrxdataClassInfo.classType;
}
- (SRXDataClassInfoBuilder*) setClassType:(SRXDataClassTypeEnumSRXDataClassType) value {
  resultSrxdataClassInfo.hasClassType = YES;
  resultSrxdataClassInfo.classType = value;
  return self;
}
- (SRXDataClassInfoBuilder*) clearClassType {
  resultSrxdataClassInfo.hasClassType = NO;
  resultSrxdataClassInfo.classType = SRXDataClassTypeEnumSRXDataClassTypeUnknown;
  return self;
}
- (BOOL) hasLocation {
  return resultSrxdataClassInfo.hasLocation;
}
- (SRXDataLocation*) location {
  return resultSrxdataClassInfo.location;
}
- (SRXDataClassInfoBuilder*) setLocation:(SRXDataLocation*) value {
  resultSrxdataClassInfo.hasLocation = YES;
  resultSrxdataClassInfo.location = value;
  return self;
}
- (SRXDataClassInfoBuilder*) setLocationBuilder:(SRXDataLocationBuilder*) builderForValue {
  return [self setLocation:[builderForValue build]];
}
- (SRXDataClassInfoBuilder*) mergeLocation:(SRXDataLocation*) value {
  if (resultSrxdataClassInfo.hasLocation &&
      resultSrxdataClassInfo.location != [SRXDataLocation defaultInstance]) {
    resultSrxdataClassInfo.location =
      [[[SRXDataLocation builderWithPrototype:resultSrxdataClassInfo.location] mergeFrom:value] buildPartial];
  } else {
    resultSrxdataClassInfo.location = value;
  }
  resultSrxdataClassInfo.hasLocation = YES;
  return self;
}
- (SRXDataClassInfoBuilder*) clearLocation {
  resultSrxdataClassInfo.hasLocation = NO;
  resultSrxdataClassInfo.location = [SRXDataLocation defaultInstance];
  return self;
}
- (BOOL) hasClassTime {
  return resultSrxdataClassInfo.hasClassTime;
}
- (SRXDataClassTime*) classTime {
  return resultSrxdataClassInfo.classTime;
}
- (SRXDataClassInfoBuilder*) setClassTime:(SRXDataClassTime*) value {
  resultSrxdataClassInfo.hasClassTime = YES;
  resultSrxdataClassInfo.classTime = value;
  return self;
}
- (SRXDataClassInfoBuilder*) setClassTimeBuilder:(SRXDataClassTimeBuilder*) builderForValue {
  return [self setClassTime:[builderForValue build]];
}
- (SRXDataClassInfoBuilder*) mergeClassTime:(SRXDataClassTime*) value {
  if (resultSrxdataClassInfo.hasClassTime &&
      resultSrxdataClassInfo.classTime != [SRXDataClassTime defaultInstance]) {
    resultSrxdataClassInfo.classTime =
      [[[SRXDataClassTime builderWithPrototype:resultSrxdataClassInfo.classTime] mergeFrom:value] buildPartial];
  } else {
    resultSrxdataClassInfo.classTime = value;
  }
  resultSrxdataClassInfo.hasClassTime = YES;
  return self;
}
- (SRXDataClassInfoBuilder*) clearClassTime {
  resultSrxdataClassInfo.hasClassTime = NO;
  resultSrxdataClassInfo.classTime = [SRXDataClassTime defaultInstance];
  return self;
}
- (BOOL) hasNumberOfClasses {
  return resultSrxdataClassInfo.hasNumberOfClasses;
}
- (SInt32) numberOfClasses {
  return resultSrxdataClassInfo.numberOfClasses;
}
- (SRXDataClassInfoBuilder*) setNumberOfClasses:(SInt32) value {
  resultSrxdataClassInfo.hasNumberOfClasses = YES;
  resultSrxdataClassInfo.numberOfClasses = value;
  return self;
}
- (SRXDataClassInfoBuilder*) clearNumberOfClasses {
  resultSrxdataClassInfo.hasNumberOfClasses = NO;
  resultSrxdataClassInfo.numberOfClasses = 0;
  return self;
}
- (BOOL) hasTuitionFeeInYuan {
  return resultSrxdataClassInfo.hasTuitionFeeInYuan;
}
- (SInt32) tuitionFeeInYuan {
  return resultSrxdataClassInfo.tuitionFeeInYuan;
}
- (SRXDataClassInfoBuilder*) setTuitionFeeInYuan:(SInt32) value {
  resultSrxdataClassInfo.hasTuitionFeeInYuan = YES;
  resultSrxdataClassInfo.tuitionFeeInYuan = value;
  return self;
}
- (SRXDataClassInfoBuilder*) clearTuitionFeeInYuan {
  resultSrxdataClassInfo.hasTuitionFeeInYuan = NO;
  resultSrxdataClassInfo.tuitionFeeInYuan = 0;
  return self;
}
- (BOOL) hasSummary {
  return resultSrxdataClassInfo.hasSummary;
}
- (NSString*) summary {
  return resultSrxdataClassInfo.summary;
}
- (SRXDataClassInfoBuilder*) setSummary:(NSString*) value {
  resultSrxdataClassInfo.hasSummary = YES;
  resultSrxdataClassInfo.summary = value;
  return self;
}
- (SRXDataClassInfoBuilder*) clearSummary {
  resultSrxdataClassInfo.hasSummary = NO;
  resultSrxdataClassInfo.summary = @"";
  return self;
}
@end

@interface SRXDataClass ()
@property SInt64 id;
@property (strong) SRXDataClassInfo* classInfo;
@end

@implementation SRXDataClass

- (BOOL) hasId {
  return !!hasId_;
}
- (void) setHasId:(BOOL) _value_ {
  hasId_ = !!_value_;
}
@synthesize id;
- (BOOL) hasClassInfo {
  return !!hasClassInfo_;
}
- (void) setHasClassInfo:(BOOL) _value_ {
  hasClassInfo_ = !!_value_;
}
@synthesize classInfo;
- (instancetype) init {
  if ((self = [super init])) {
    self.id = 0L;
    self.classInfo = [SRXDataClassInfo defaultInstance];
  }
  return self;
}
static SRXDataClass* defaultSRXDataClassInstance = nil;
+ (void) initialize {
  if (self == [SRXDataClass class]) {
    defaultSRXDataClassInstance = [[SRXDataClass alloc] init];
  }
}
+ (instancetype) defaultInstance {
  return defaultSRXDataClassInstance;
}
- (instancetype) defaultInstance {
  return defaultSRXDataClassInstance;
}
- (BOOL) isInitialized {
  return YES;
}
- (void) writeToCodedOutputStream:(PBCodedOutputStream*) output {
  if (self.hasId) {
    [output writeInt64:1 value:self.id];
  }
  if (self.hasClassInfo) {
    [output writeMessage:2 value:self.classInfo];
  }
  [self.unknownFields writeToCodedOutputStream:output];
}
- (SInt32) serializedSize {
  __block SInt32 size_ = memoizedSerializedSize;
  if (size_ != -1) {
    return size_;
  }

  size_ = 0;
  if (self.hasId) {
    size_ += computeInt64Size(1, self.id);
  }
  if (self.hasClassInfo) {
    size_ += computeMessageSize(2, self.classInfo);
  }
  size_ += self.unknownFields.serializedSize;
  memoizedSerializedSize = size_;
  return size_;
}
+ (SRXDataClass*) parseFromData:(NSData*) data {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromData:data] build];
}
+ (SRXDataClass*) parseFromData:(NSData*) data extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromData:data extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClass*) parseFromInputStream:(NSInputStream*) input {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromInputStream:input] build];
}
+ (SRXDataClass*) parseFromInputStream:(NSInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClass*) parseFromCodedInputStream:(PBCodedInputStream*) input {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromCodedInputStream:input] build];
}
+ (SRXDataClass*) parseFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  return (SRXDataClass*)[[[SRXDataClass builder] mergeFromCodedInputStream:input extensionRegistry:extensionRegistry] build];
}
+ (SRXDataClassBuilder*) builder {
  return [[SRXDataClassBuilder alloc] init];
}
+ (SRXDataClassBuilder*) builderWithPrototype:(SRXDataClass*) prototype {
  return [[SRXDataClass builder] mergeFrom:prototype];
}
- (SRXDataClassBuilder*) builder {
  return [SRXDataClass builder];
}
- (SRXDataClassBuilder*) toBuilder {
  return [SRXDataClass builderWithPrototype:self];
}
- (void) writeDescriptionTo:(NSMutableString*) output withIndent:(NSString*) indent {
  if (self.hasId) {
    [output appendFormat:@"%@%@: %@\n", indent, @"id", [NSNumber numberWithLongLong:self.id]];
  }
  if (self.hasClassInfo) {
    [output appendFormat:@"%@%@ {\n", indent, @"classInfo"];
    [self.classInfo writeDescriptionTo:output
                         withIndent:[NSString stringWithFormat:@"%@  ", indent]];
    [output appendFormat:@"%@}\n", indent];
  }
  [self.unknownFields writeDescriptionTo:output withIndent:indent];
}
- (void) storeInDictionary:(NSMutableDictionary *)dictionary {
  if (self.hasId) {
    [dictionary setObject: [NSNumber numberWithLongLong:self.id] forKey: @"id"];
  }
  if (self.hasClassInfo) {
   NSMutableDictionary *messageDictionary = [NSMutableDictionary dictionary]; 
   [self.classInfo storeInDictionary:messageDictionary];
   [dictionary setObject:[NSDictionary dictionaryWithDictionary:messageDictionary] forKey:@"classInfo"];
  }
  [self.unknownFields storeInDictionary:dictionary];
}
- (BOOL) isEqual:(id)other {
  if (other == self) {
    return YES;
  }
  if (![other isKindOfClass:[SRXDataClass class]]) {
    return NO;
  }
  SRXDataClass *otherMessage = other;
  return
      self.hasId == otherMessage.hasId &&
      (!self.hasId || self.id == otherMessage.id) &&
      self.hasClassInfo == otherMessage.hasClassInfo &&
      (!self.hasClassInfo || [self.classInfo isEqual:otherMessage.classInfo]) &&
      (self.unknownFields == otherMessage.unknownFields || (self.unknownFields != nil && [self.unknownFields isEqual:otherMessage.unknownFields]));
}
- (NSUInteger) hash {
  __block NSUInteger hashCode = 7;
  if (self.hasId) {
    hashCode = hashCode * 31 + [[NSNumber numberWithLongLong:self.id] hash];
  }
  if (self.hasClassInfo) {
    hashCode = hashCode * 31 + [self.classInfo hash];
  }
  hashCode = hashCode * 31 + [self.unknownFields hash];
  return hashCode;
}
@end

@interface SRXDataClassBuilder()
@property (strong) SRXDataClass* resultSrxdataClass;
@end

@implementation SRXDataClassBuilder
@synthesize resultSrxdataClass;
- (instancetype) init {
  if ((self = [super init])) {
    self.resultSrxdataClass = [[SRXDataClass alloc] init];
  }
  return self;
}
- (PBGeneratedMessage*) internalGetResult {
  return resultSrxdataClass;
}
- (SRXDataClassBuilder*) clear {
  self.resultSrxdataClass = [[SRXDataClass alloc] init];
  return self;
}
- (SRXDataClassBuilder*) clone {
  return [SRXDataClass builderWithPrototype:resultSrxdataClass];
}
- (SRXDataClass*) defaultInstance {
  return [SRXDataClass defaultInstance];
}
- (SRXDataClass*) build {
  [self checkInitialized];
  return [self buildPartial];
}
- (SRXDataClass*) buildPartial {
  SRXDataClass* returnMe = resultSrxdataClass;
  self.resultSrxdataClass = nil;
  return returnMe;
}
- (SRXDataClassBuilder*) mergeFrom:(SRXDataClass*) other {
  if (other == [SRXDataClass defaultInstance]) {
    return self;
  }
  if (other.hasId) {
    [self setId:other.id];
  }
  if (other.hasClassInfo) {
    [self mergeClassInfo:other.classInfo];
  }
  [self mergeUnknownFields:other.unknownFields];
  return self;
}
- (SRXDataClassBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input {
  return [self mergeFromCodedInputStream:input extensionRegistry:[PBExtensionRegistry emptyRegistry]];
}
- (SRXDataClassBuilder*) mergeFromCodedInputStream:(PBCodedInputStream*) input extensionRegistry:(PBExtensionRegistry*) extensionRegistry {
  PBUnknownFieldSetBuilder* unknownFields = [PBUnknownFieldSet builderWithUnknownFields:self.unknownFields];
  while (YES) {
    SInt32 tag = [input readTag];
    switch (tag) {
      case 0:
        [self setUnknownFields:[unknownFields build]];
        return self;
      default: {
        if (![self parseUnknownField:input unknownFields:unknownFields extensionRegistry:extensionRegistry tag:tag]) {
          [self setUnknownFields:[unknownFields build]];
          return self;
        }
        break;
      }
      case 8: {
        [self setId:[input readInt64]];
        break;
      }
      case 18: {
        SRXDataClassInfoBuilder* subBuilder = [SRXDataClassInfo builder];
        if (self.hasClassInfo) {
          [subBuilder mergeFrom:self.classInfo];
        }
        [input readMessage:subBuilder extensionRegistry:extensionRegistry];
        [self setClassInfo:[subBuilder buildPartial]];
        break;
      }
    }
  }
}
- (BOOL) hasId {
  return resultSrxdataClass.hasId;
}
- (SInt64) id {
  return resultSrxdataClass.id;
}
- (SRXDataClassBuilder*) setId:(SInt64) value {
  resultSrxdataClass.hasId = YES;
  resultSrxdataClass.id = value;
  return self;
}
- (SRXDataClassBuilder*) clearId {
  resultSrxdataClass.hasId = NO;
  resultSrxdataClass.id = 0L;
  return self;
}
- (BOOL) hasClassInfo {
  return resultSrxdataClass.hasClassInfo;
}
- (SRXDataClassInfo*) classInfo {
  return resultSrxdataClass.classInfo;
}
- (SRXDataClassBuilder*) setClassInfo:(SRXDataClassInfo*) value {
  resultSrxdataClass.hasClassInfo = YES;
  resultSrxdataClass.classInfo = value;
  return self;
}
- (SRXDataClassBuilder*) setClassInfoBuilder:(SRXDataClassInfoBuilder*) builderForValue {
  return [self setClassInfo:[builderForValue build]];
}
- (SRXDataClassBuilder*) mergeClassInfo:(SRXDataClassInfo*) value {
  if (resultSrxdataClass.hasClassInfo &&
      resultSrxdataClass.classInfo != [SRXDataClassInfo defaultInstance]) {
    resultSrxdataClass.classInfo =
      [[[SRXDataClassInfo builderWithPrototype:resultSrxdataClass.classInfo] mergeFrom:value] buildPartial];
  } else {
    resultSrxdataClass.classInfo = value;
  }
  resultSrxdataClass.hasClassInfo = YES;
  return self;
}
- (SRXDataClassBuilder*) clearClassInfo {
  resultSrxdataClass.hasClassInfo = NO;
  resultSrxdataClass.classInfo = [SRXDataClassInfo defaultInstance];
  return self;
}
@end


// @@protoc_insertion_point(global_scope)
